
/*******************************************************************************
* generated by lcd-image-converter rev.030b30d from 2019-03-17 01:38:34 +0500
* font
* filename: C:/Users/Linbei/Nutstore/1/我的坚果云/软件/stm32_tool/Font_Image_tool/lcd-image-converter/MQ2_V3_ECOSAVER/Font_MQ_V3_EN_14.xml
* name: Font_MQ_V3_EN_14
* family: Arial
* size: 14
* style: Regular
* included characters: ABCD
* antialiasing: no
* type: proportional
* encoding: UTF-8
* unicode bom: no
*
* preset name: Color R5G6B5
* data block size: 16 bit(s), uint16_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* split to rows: yes
* bits per pixel: 16
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint16_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
 typedef struct {
     long int code;
     const tImage *image;
     } tChar;
 typedef struct {
     int length;
     const tChar *chars;
     } tFont;
*/
#include "../include_src.hpp"
#include <stdint.h>



#if (0x0 == 0x0)
static const uint16_t image_data_Font_MQ_V3_EN_14_0x41[144] = {
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓∙▓▓▓▓
    // ▓▓▓∙▓∙▓▓▓
    // ▓▓▓∙▓∙▓▓▓
    // ▓▓▓∙▓∙▓▓▓
    // ▓▓∙▓▓▓∙▓▓
    // ▓▓∙▓▓▓∙▓▓
    // ▓∙∙∙∙∙∙∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ∙▓▓▓▓▓▓▓∙
    // ∙▓▓▓▓▓▓▓∙
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 
    0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2
};
static const tImage Font_MQ_V3_EN_14_0x41 = { image_data_Font_MQ_V3_EN_14_0x41,
    9, 16, 16};
#endif

#if (0x0 == 0x0)
static const uint16_t image_data_Font_MQ_V3_EN_14_0x42[144] = {
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓∙∙∙∙∙∙▓▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙∙∙∙∙∙▓▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓
    // ▓∙∙∙∙∙∙▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2
};
static const tImage Font_MQ_V3_EN_14_0x42 = { image_data_Font_MQ_V3_EN_14_0x42,
    9, 16, 16};
#endif

#if (0x0 == 0x0)
static const uint16_t image_data_Font_MQ_V3_EN_14_0x43[160] = {
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓∙∙∙∙▓▓▓
    // ▓▓∙▓▓▓▓∙▓▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓▓▓
    // ▓∙▓▓▓▓▓▓▓▓
    // ▓∙▓▓▓▓▓▓▓▓
    // ▓∙▓▓▓▓▓▓▓▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓▓∙▓▓▓▓∙▓▓
    // ▓▓▓∙∙∙∙▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2
};
static const tImage Font_MQ_V3_EN_14_0x43 = { image_data_Font_MQ_V3_EN_14_0x43,
    10, 16, 16};
#endif

#if (0x0 == 0x0)
static const uint16_t image_data_Font_MQ_V3_EN_14_0x44[160] = {
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓∙∙∙∙∙∙▓▓▓
    // ▓∙▓▓▓▓▓∙▓▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓▓∙▓
    // ▓∙▓▓▓▓▓∙▓▓
    // ▓∙∙∙∙∙∙▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    // ▓▓▓▓▓▓▓▓▓▓
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 
    0x97d2, 0x0000, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x0000, 0x97d2, 0x97d2, 
    0x97d2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 
    0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2, 0x97d2
};
static const tImage Font_MQ_V3_EN_14_0x44 = { image_data_Font_MQ_V3_EN_14_0x44,
    10, 16, 16};
#endif


static const tChar Font_MQ_V3_EN_14_array[] = {

#if (0x0 == 0x0)
  // character: 'A'
  {0x41, &Font_MQ_V3_EN_14_0x41},
#else
  // character: 'A' == ''
  {0x41, &Font_MQ_V3_EN_14_0x},
#endif

#if (0x0 == 0x0)
  // character: 'B'
  {0x42, &Font_MQ_V3_EN_14_0x42},
#else
  // character: 'B' == ''
  {0x42, &Font_MQ_V3_EN_14_0x},
#endif

#if (0x0 == 0x0)
  // character: 'C'
  {0x43, &Font_MQ_V3_EN_14_0x43},
#else
  // character: 'C' == ''
  {0x43, &Font_MQ_V3_EN_14_0x},
#endif

#if (0x0 == 0x0)
  // character: 'D'
  {0x44, &Font_MQ_V3_EN_14_0x44}
#else
  // character: 'D' == ''
  {0x44, &Font_MQ_V3_EN_14_0x}
#endif

};


tFont Font_MQ_V3_EN_14 = { 4, Font_MQ_V3_EN_14_array };

